openapi: 3.0.4
info:
  title: Chamber of Keys API
  version: 1.0.0
  description: |
    A REST API for managing strings and lists with TTL support.
  contact:
    name: Chamber Maintainers
    email: magic@keys.vault

servers:
  - url: http://localhost:8080
    description: Local development server

paths:

  /string/{key}:
    get:
      summary: Retrieve a string value
      operationId: getString
      tags: [String]
      parameters:
        - name: key
          in: path
          required: true
          description: Key to look up
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringValue'
        '404':
          description: Not found

    put:
      summary: Update a string
      operationId: updateString
      tags: [String]
      parameters:
        - name: key
          in: path
          required: true
          description: Key to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StringUpdateRequest'
      responses:
        '200':
          description: String updated
        '400':
          description: Bad request
        '500':
          description: Internal error

  /string:
    post:
      summary: Insert a string
      operationId: insertString
      tags: [String]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StringInsertRequest'
      responses:
        '200':
          description: String inserted
        '400':
          description: Bad request
        '500':
          description: Internal error

  /list/{key}/items:
    post:
      summary: Push item into a list
      operationId: pushItem
      tags: [List]
      parameters:
        - name: key
          in: path
          required: true
          description: List identifier
          schema:
            type: string
        - name: position
          in: query
          required: true
          description: Direction to push
          schema:
            type: string
            enum: [front, back]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListPushRequest'
      responses:
        '200':
          description: Item pushed
        '400':
          description: Invalid input
        '500':
          description: Internal error

    delete:
      summary: Pop item from a list
      operationId: popItem
      tags: [List]
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
        - name: position
          in: query
          required: true
          schema:
            type: string
            enum: [front, back]
      responses:
        '200':
          description: Item popped
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPopResponse'
        '400':
          description: Invalid position
        '404':
          description: No item found

  /{key}:
    delete:
      summary: Remove a string or list by key
      operationId: removeKey
      tags: [Core]
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Item removed
        '404':
          description: Key not found

components:
  schemas:

    StringInsertRequest:
      type: object
      required: [key, value]
      properties:
        key:
          type: string
        value:
          type: string
        ttl:
          type: integer
          format: int64
          description: TTL in seconds

    StringUpdateRequest:
      type: object
      required: [value]
      properties:
        value:
          type: string

    StringValue:
      type: object
      properties:
        value:
          type: string

    ListPushRequest:
      type: object
      required: [value]
      properties:
        value:
          type: string
        ttl:
          type: integer
          format: int64
          description: TTL in seconds

    ListPopResponse:
      type: object
      properties:
        value:
          type: string

tags:
  - name: String
    description: Endpoints for managing string values

  - name: List
    description: Endpoints for manipulating list structures

  - name: Core
    description: Shared utility endpoints
